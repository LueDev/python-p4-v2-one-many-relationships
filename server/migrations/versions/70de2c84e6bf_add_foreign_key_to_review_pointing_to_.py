"""Add foreign key to Review pointing to employee ID

Revision ID: 70de2c84e6bf
Revises: 93a55fc8d7bf
Create Date: 2024-05-23 20:50:20.839109

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '70de2c84e6bf'
down_revision = '93a55fc8d7bf'
branch_labels = None
depends_on = None


def upgrade():
    '''
        op.batch_alter_table('reviews', schema=None): This context manager allows you to perform operations that require a temporary table to handle the migration process.
        batch_op.add_column(sa.Column('employee_id', sa.Integer(), nullable=True)): Adds the employee_id column within the batch context.
        batch_op.create_foreign_key(...): Creates the foreign key within the batch context.
        batch_op.drop_constraint(...): Drops the foreign key within the batch context during the downgrade.
        batch_op.drop_column('employee_id'): Drops the employee_id column within the batch context during the downgrade.
    '''
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            'fk_reviews_employee_id_employees',
            'employees',
            ['employee_id'],
            ['id'],
            ondelete='CASCADE'
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint('fk_reviews_employee_id_employees', type_='foreignkey')
        batch_op.drop_column('employee_id')
    # ### end Alembic commands ###
